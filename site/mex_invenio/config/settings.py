"""
InvenioRDM settings for mex-invenio project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://inveniordm.docs.cern.ch/reference/configuration/.
"""

from datetime import datetime

from invenio_app_rdm.config import OAISERVER_METADATA_FORMATS
from invenio_i18n import lazy_gettext as _

from mex_invenio.custom_fields.custom_fields import (
    RDM_NAMESPACES,
    RDM_CUSTOM_FIELDS,
    RDM_CUSTOM_FIELDS_UI,
)
from mex_invenio.custom_fields.field_types import get_field_types
from mex_invenio.custom_fields.pref_labels import get_pref_labels


def _(x):  # needed to avoid start time failure with lazy strings
    return x


# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

# Define the value of the cache control header `max-age` returned by the server when serving
# public files. Files will be cached by the browser for the provided number of seconds.
# See flask documentation for more information:
# https://flask.palletsprojects.com/en/2.1.x/config/#SEND_FILE_MAX_AGE_DEFAULT
SEND_FILE_MAX_AGE_DEFAULT = 300

# SECURITY WARNING: keep the secret key used in production secret!
# Do not commit it to a source code repository.
# TODO: Set
SECRET_KEY = "CHANGE_ME"

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
APP_ALLOWED_HOSTS = ["0.0.0.0", "localhost", "127.0.0.1"]

# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

# TODO: Set
SQLALCHEMY_DATABASE_URI = (
    "postgresql+psycopg2://mex-invenio:mex-invenio@localhost/mex-invenio"
)

# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

APP_DEFAULT_SECURE_HEADERS = {
    "content_security_policy": {
        "default-src": [
            "'self'",
            "data:",  # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "blob:",  # for pdf preview
            # Add your own policies here (e.g. analytics)
        ],
    },
    "content_security_policy_report_only": False,
    "content_security_policy_report_uri": None,
    "force_file_save": False,
    "force_https": True,
    "force_https_permanent": False,
    "frame_options": "sameorigin",
    "frame_options_allow_from": None,
    "session_cookie_http_only": True,
    "session_cookie_secure": True,
    "strict_transport_security": True,
    "strict_transport_security_include_subdomains": True,
    "strict_transport_security_max_age": 31556926,  # One year in seconds
    "strict_transport_security_preload": False,
}

# Flask-Babel
# ===========
# See https://python-babel.github.io/flask-babel/#configuration

# Default locale (language)
# Default time zone
BABEL_DEFAULT_TIMEZONE = "Europe/Zurich"

# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
BABEL_DEFAULT_LOCALE = "de"
I18N_LANGUAGES = [("en", _("English"))]

# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Name used in header and UI
THEME_SITENAME = "MEx"
# Frontpage title
THEME_FRONTPAGE_TITLE = "Metadata Exchange"
# Intro section
THEME_SHOW_FRONTPAGE_INTRO_SECTION = False
# Header logo
ORGANISATION_LOGO = "images/RKI-logo.svg"
THEME_LOGO = "images/mex-logo.svg"

# Invenio-App-RDM
# ===============
# See https://github.com/inveniosoftware/invenio-app-rdm/blob/master/invenio_app_rdm/config.py

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = "./less/theme.less"

# Email address for administrator emails (like file checksum alerts)
APP_RDM_ADMIN_EMAIL_RECIPIENT = "mex@rki.de"

# Default values for the deposit form
APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "publication_date": lambda: datetime.now().strftime("%Y-%m-%d"),
    "rights": [
        {
            "id": "cc-by-4.0",
            "title": "Creative Commons Attribution 4.0 International",
            "description": (
                "The Creative Commons Attribution license allows "
                "re-distribution and re-use of a licensed work "
                "on the condition that the creator is "
                "appropriately credited."
            ),
            "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
        }
    ],
    "publisher": "mex-invenio",
}

APP_RDM_DEPOSIT_FORM_AUTOCOMPLETE_NAMES = "search"  # "search_only" or "off"

# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

# TODO: Set with your own hostname when deploying to production
SITE_UI_URL = "https://127.0.0.1"

SITE_API_URL = "https://127.0.0.1/api"

# Invenio-RDM-Records
# ===================
# See https://inveniordm.docs.cern.ch/customize/dois/
DATACITE_ENABLED = False
DATACITE_USERNAME = ""
DATACITE_PASSWORD = ""
DATACITE_PREFIX = ""
DATACITE_TEST_MODE = True
DATACITE_DATACENTER_SYMBOL = ""

# Authentication - Invenio-Accounts and Invenio-OAuthclient
# =========================================================
# See: https://inveniordm.docs.cern.ch/customize/authentication/

# Invenio-Accounts
# ----------------
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py
ACCOUNTS_LOCAL_LOGIN_ENABLED = True  # enable local login
SECURITY_REGISTERABLE = True  # local login: allow users to register
SECURITY_RECOVERABLE = True  # local login: allow users to reset the password
SECURITY_CHANGEABLE = True  # local login: allow users to change psw
SECURITY_CONFIRMABLE = True  # local login: users can confirm e-mail address
SECURITY_LOGIN_WITHOUT_CONFIRMATION = (
    False  # require users to confirm email before being able to login
)

# Invenio-OAuthclient
# -------------------
# See https://github.com/inveniosoftware/invenio-oauthclient/blob/master/invenio_oauthclient/config.py

OAUTHCLIENT_REMOTE_APPS = {}  # configure external login providers

from invenio_oauthclient.views.client import auto_redirect_login

ACCOUNTS_LOGIN_VIEW_FUNCTION = (
    auto_redirect_login  # autoredirect to external login if enabled
)
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = (
    False  # allow users to change profile info (name, email, etc...)
)

# OAI-PMH
# =======
# See https://github.com/inveniosoftware/invenio-oaiserver/blob/master/invenio_oaiserver/config.py

OAISERVER_ID_PREFIX = "mex.rki.de"
"""The prefix that will be applied to the generated OAI-PMH ids."""
OAISERVER_ADMIN_EMAILS = [
    "mex@rki.de",
]

# configure a custom OAI metadata format for MEx
OAISERVER_METADATA_FORMATS["oai_dc"] = {
    "serializer": "mex_invenio.oai.mex:mex_dublincore_etree",
    "schema": "http://www.openarchives.org/OAI/2.0/oai_dc.xsd",
    "namespace": "http://www.openarchives.org/OAI/2.0/oai_dc/",
}

# a list of custom fields that will be included in the OAI-PMH output as dc:source
OAISERVER_SOURCES = ["mex:containedBy", "mex:wasGeneratedBy", "mex:usedIn"]

# a list of custom fields that will be included in the OAI-PMH output as dc:relation
OAISERVER_RELATIONS = ["mex:distribution", "mex:isPartOf", "mex:belongsTo"]

# Invenio-Search
# --------------

SEARCH_INDEX_PREFIX = "mex-invenio-"

# Invenio-Users-Resources
# -----------------------

USERS_RESOURCES_ADMINISTRATION_ENABLED = True
"""Enable the user administration"""

# S3 config

S3_DOWNLOAD_FOLDER = "s3_downloads"

# If S3_ENDPOINT_URL is not set the script will use the default AWS S3 endpoint
# S3_ENDPOINT_URL = 'http://localhost:9000'

# If S3_OBJECT_KEY is set, the script will download that specific file from S3
# if it is not set the script will download the latest file in the bucket
# NOTE that this requires permissions to list objects in the bucket
S3_OBJECT_KEY = "pub_small.ndjson"

COMMUNITIES_GROUPS_ENABLED = False

# Script log config
# --------------

IMPORT_LOG_FILE = "logs/import_data.log"
IMPORT_LOG_FORMAT = "%(asctime)s - %(levelname)s - (line: %(lineno)d) - %(message)s"

S3_LOG_FILE = "logs/s3_manager.log"
S3_LOG_FORMAT = IMPORT_LOG_FORMAT

# The value for the Datacite creator property in imported records
RECORD_METADATA_CREATOR = {
    "person_or_org": {
        "name": "Robert Koch Institute",
        "type": "organizational",
    },
}

# MEx properties to use as record title
RECORD_METADATA_TITLE_PROPERTIES = [
    "title",
    "name",
    "fullName",
    "label",
    "officialName",
    "email",
    "familyName",
]

# The default value for the Datacite title property in imported records
# if it is not present in the MEx source record
RECORD_METADATA_DEFAULT_TITLE = "[Untitled]"

# ---
# Custom facets
# ---

from invenio_rdm_records.config import RDM_SEARCH, RDM_FACETS
from mex_invenio.custom_facets import RestrictedTermsFacet
from invenio_vocabularies.services.facets import VocabularyLabels

RDM_FACETS = {
    **RDM_FACETS,
    "restricted_resource_type": {
        "facet": RestrictedTermsFacet(
            field="metadata.resource_type.props.type",
            subfield="metadata.resource_type.props.subtype",
            splitchar="::",
            # Field to filter on
            label=_("Resource types"),
            value_labels=VocabularyLabels("resourcetypes"),
            excluded_values=[
                "accessplatform",
                "concept",
                "consent",
                "contactpoint",
                "distribution",
                "organization",
                "organizationalunit",
                "person",
                "primarysource",
                "variablegroup",
            ],
        ),
        "ui": {"field": "resource_type.id"},
    },
}

RDM_SEARCH = {**RDM_SEARCH, "facets": ["restricted_resource_type"]}

# ---------- UI --------------

FIELD_LABELS_UI = {
    "mex:accessPlatform": "Access Platform",
    "mex:accessRestriction": "Access Restriction",
    "mex:accrualPeriodicity": "Accrual Periodicity",
    "mex:alternativeTitle": "Alternative Title",
    "mex:anonymizationPseudonymization": "Anonymization Pseudonymization",
    "mex:conformsTo": "Conforms To",
    "mex:contact": "Contact",
    "mex:contributingUnit": "Contributing Unit",
    "mex:contributor": "Contributor",
    "mex:created": "Created",
    "mex:creator": "Creator",
    "mex:description": "Description",
    "mex:distribution": "Distribution",
    "mex:documentation": "Documentation",
    "mex:doi": "Doi",
    "mex:externalPartner": "External Partner",
    "mex:hadPrimarySource": "Had Primary Source",
    "mex:hasLegalBasis": "Has Legal Basis",
    "mex:hasPersonalData": "Has Personal Data",
    "mex:icd10code": "Icd10 Code",
    "mex:identifier": "Identifier",
    "mex:identifierInPrimarySource": "Identifier In Primary Source",
    "mex:instrumentToolOrApparatus": "Instrument Tool Or Apparatus",
    "mex:isPartOf": "Part Of",
    "mex:keyword": "Keyword",
    "mex:language": "Language",
    "mex:license": "License",
    "mex:loincId": "Loinc Id",
    "mex:maxTypicalAge": "Max Typical Age",
    "mex:meshId": "Mesh Id",
    "mex:method": "Method",
    "mex:methodDescription": "Method Description",
    "mex:minTypicalAge": "Min Typical Age",
    "mex:modified": "Modified",
    "mex:populationCoverage": "Population Coverage",
    "mex:publication": "Publication",
    "mex:publisher": "Publisher",
    "mex:qualityInformation": "Quality Information",
    "mex:resourceCreationMethod": "Resource Creation Method",
    "mex:resourceTypeGeneral": "Resource Type General",
    "mex:resourceTypeSpecific": "Resource Type Specific",
    "mex:rights": "Rights",
    "mex:sizeOfDataBasis": "Size Of Data Basis",
    "mex:spatial": "Spatial",
    "mex:stableTargetId": "Stable Target Id",
    "mex:stateOfDataProcessing": "State Of Data Processing",
    "mex:temporal": "Temporal",
    "mex:theme": "Theme",
    "mex:title": "Title",
    "mex:unitInCharge": "Unit In Charge",
    "mex:wasGeneratedBy": "Was Generated By",
    "mex:usedIn": "Variable",
}

RECORD_CARDS = {
    "resource": {
        "left": {
            "creators": {
                "type": "single",
                "title": "Creators & Contributors",
                "icon": "creators.svg",
                "properties": [
                    "mex:creator",
                    "mex:unitInCharge",
                    "mex:contributor",
                    "mex:contributingUnit",
                    "mex:externalPartner",
                ],
            },
            "theme": {
                "type": "single",
                "title": "Theme & Keywords",
                "icon": "theme.svg",
                "properties": [
                    "mex:theme",
                    "mex:keyword",
                ],
            },
            "coverage": {
                "type": "single",
                "title": "Data Representation & Coverage",
                "icon": "coverage.svg",
                "properties": [
                    "mex:temporal",
                    "mex:spatial",
                    "mex:minTypicalAge",
                    "mex:maxTypicalAge",
                    "mex:populationCoverage",
                    "mex:sizeOfDataBasis",
                ],
            },
            "legal": {
                "type": "single",
                "title": "Legal Basis & Data Provenance",
                "icon": "legal.svg",
                "properties": [
                    "mex:hasLegalBasis",
                    "mex:hasPersonalData",
                    "mex:wasGeneratedBy",
                ],
            },
            "processing": {
                "type": "single",
                "title": "Data Collection & Processing",
                "icon": "processing.svg",
                "properties": [
                    "mex:resourceCreationMethod",
                    "mex:accrualPeriodicity",
                    "mex:anonymizationPseudonymization",
                    "mex:instrumentToolOrApparatus",
                ],
            },
            "quality": {
                "type": "single",
                "title": "Standards & Quality",
                "icon": "quality.svg",
                "properties": ["mex:conformsTo", "mex:qualityInformation"],
            },
            "methodology": {
                "type": "single",
                "title": "Methodology",
                "icon": "methodology.svg",
                "properties": ["mex:method", "mex:methodDescription"],
            },
            "publication": {
                "type": "single",
                "title": "Related Publication & Further Documentation",
                "icon": "publication.svg",
                "properties": ["mex:publication", "mex:documentation"],
            },
            "generatedBy": {
                "type": "single",
                "title": "Related Projects",
                "icon": "relatedProjects.svg",
                "properties": ["mex:wasGeneratedBy"]
            },
            "relatedResources": {
                "type": "container",
                "title": "Related Resources",
                "icon": "relatedResources.svg",
                "components": [
                    {
                        "type": "component",
                        "title": "Part Of",
                        "properties": ["mex:isPartOf"],
                    },
                    {
                        "type": "component",
                        "title": "Includes",
                        "is_backwards_linked": True,
                        "properties": ["mex:isPartOf"]
                    }
                ]
            }
        },
        "right": {
            "contact": {
                "type": "single",
                "title": "Contact",
                "template": "contact.html",
                "icon": "contact.svg",
                "properties": ["mex:contact"],
            },
            "access": {
                "type": "single",
                "title": "Access & Usage Rights",
                "template": "access.html",
                "icon": "access.svg",
                "properties": ["mex:accessRestriction", "mex:doi", "mex:license", "mex:rights"],
            },
            "files": {
                "type": "single",
                "title": "Files",
                "template": "files.html",
                "icon": "distribution.svg",
                "properties": ["mex:distribution"],
            },
            "variables": {
                "type": "single",
                "title": "Variables",
                "template": "variables.html",
                "icon": "variables.svg",
                "is_backwards_linked": True,
                "properties": ["mex:usedIn"],
            },
        }
    }
}

PROPS_WITHOUT_LABELS = {
    "resource": ["mex:theme", "mex:isPartOf"]
}

IS_ACCESS_STATUS_OPEN = {
    "https://mex.rki.de/item/access-restriction-1": True,
    "https://mex.rki.de/item/access-restriction-2": False,
}

APP_RDM_DETAIL_SIDE_BAR_TEMPLATES = [
    "invenio_app_rdm/records/details/side_bar/metrics.html",
    "invenio_app_rdm/records/details/side_bar/versions.html",
    "invenio_app_rdm/records/details/side_bar/export.html",
]

APP_RDM_RECORD_EXPORTERS = {
    "json": {
        "name": _("JSON"),
        "serializer": ("flask_resources.serializers:JSONSerializer"),
        "params": {"options": {"indent": 2, "sort_keys": True}},
        "content-type": "application/json",
        "filename": "{id}.json",
    }
}

# List of entities available in mex model
ENTITIES = [
    "access-platform",
    "activity",
    "bibliographic-resource",
    "concept-scheme",
    "concept",
    "consent",
    "contact-point",
    "distribution",
    "organization",
    "organizational-unit",
    "person",
    "primary-source",
    "resource",
    "variable-group",
    "variable",
]

LINKED_RECORDS_FIELDS = {
    "accessplatform": {
        "mex:contact": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"],
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ],
            "mex:contactpoint": ["mex:email"],
        },
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:unitInCharge": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
    },
    "activity": {
        "mex:contact": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"],
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ],
            "mex:contactpoint": ["mex:email"],
        },
        "mex:externalAssociate": {
            "mex:organization": ["mex:officialName"],
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ],
        },
        "mex:funderOrCommissioner": {"mex:organization": ["mex:officialName"]},
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:involvedPerson": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:involvedUnit": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:isPartOfActivity": {"mex:activity": ["mex:title"]},
        "mex:publication": {"mex:bibliographicresource": ["mex:title"]},
        "mex:responsibleUnit": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:succeeds": {"mex:activity": ["mex:title"]},
    },
    "bibliographicresource": {
        "mex:contributingUnit": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:creator": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:distribution": {"mex:distribution": ["mex:title"]},
        "mex:editor": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:editorOfSeries": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:publisher": {"mex:organization": ["mex:officialName"]},
    },
    "concept": {"mex:inScheme": {"mex:conceptscheme": ["mex:prefLabel"]}},
    "consent": {
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:hasDataSubject": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
    },
    "contactpoint": {
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        }
    },
    "distribution": {
        "mex:accessService": {
            "mex:accessplatform": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
    },
    "organization": {
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        }
    },
    "organizationalunit": {
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:parentUnit": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:unitOf": {"mex:organization": ["mex:officialName"]},
    },
    "person": {
        "mex:affiliation": {"mex:organization": ["mex:officialName"]},
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:memberOf": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
    },
    "primarysource": {
        "mex:contact": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"],
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ],
            "mex:contactpoint": ["mex:email"],
        },
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:unitInCharge": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName"]
        },
    },
    "resource": {
        "mex:accessPlatform": {
            "mex:accessplatform": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:belongsTo": {
            "mex:activity": ["mex:title"]
        },
        "mex:contact": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName"],
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ],
            "mex:contactpoint": ["mex:email"],
        },
        "mex:contributingUnit": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:contributor": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:creator": {
            "mex:person": [
                "mex:fullName",
                "mex:familyName",
                "mex:givenName",
                "mex:email",
            ]
        },
        "mex:distribution": {"mex:distribution": ["mex:title"]},
        "mex:externalPartner": {"mex:organization": ["mex:officialName"]},
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:isPartOf": {"mex:resource": ["mex:title", "mex:alternativeTitle"]},
        "mex:publication": {"mex:bibliographicresource": ["mex:title"]},
        "mex:publisher": {"mex:organization": ["mex:officialName"]},
        "mex:unitInCharge": {
            "mex:organizationalunit": ["mex:name", "mex:alternativeName", "mex:email"]
        },
        "mex:wasGeneratedBy": {"mex:activity": ["mex:title"]},
    },
    "variablegroup": {
        "mex:containedBy": {"mex:resource": ["mex:title"]},
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
    },
    "variable": {
        "mex:belongsTo": {"mex:variablegroup": ["mex:label"]},
        "mex:hadPrimarySource": {
            "mex:primarysource": ["mex:title", "mex:alternativeTitle"]
        },
        "mex:usedIn": {"mex:resource": ["mex:title"]},
    },
}

RECORDS_LINKED_BACKWARDS = {
    "resource": {
        "mex:usedIn": ["mex:label"],
        "mex:isPartOf": ["mex:title"],
    }
}

RECORD_SPECIAL_FIELDS = {
    "RESOURCE_TYPE_SPECIFIC": "mex:resourceTypeSpecific",
    "RESOURCE_TYPE_GENERAL": "mex:resourceTypeGeneral",
    "CREATED": "mex:created",
    "ACCESS_RESTRICTION": "mex:accessRestriction",
    "ALT_TITLE": "mex:alternativeTitle",
    "DESCRIPTION": "mex:description",
    "LANGUAGE": "mex:language",
}

EXTIDS = {
    "mex:doi": {
        "urls": [
            "https://dx.doi.org/",
            "http://doi.org/",
            "https://doi.org/",
            "http://dx.doi.org/",
        ]
    },
    "mex:meshId": {"urls": ["http://id.nlm.nih.gov/mesh/"]},
    "mex:loincId": {"urls": ["https://loinc.org/"]},
    "mex:icd10code": {},
}

TAGS = ["mex:keyword"]

FIELD_TYPES = get_field_types()
PREF_LABELS = get_pref_labels()

from mex_invenio.custom_fields import field_types

CUSTOM_TYPES = field_types.CUSTOM_TYPES

# string to use when linked record is not found, must be something to not mix up with properties without value
NO_RECORD_STRING = "No record found"
